###############################################################################
#	Some snippets for T-SQL. For use with the snipmate plugin in Vim.
#
#	Install: Put this file in ~YourPath~/snipmate.vim/snippets
# 
#	There is a mini grammar used by the snippets. It works similar to Vim with
#	things like dw=delete word.
#		Nouns: tab, col, fk, ind, sp, fn, vw, sel, tr
#		Verbs: (a)lter, (d)rop
#			   create is implicit, just type the noun
#		Use: create column = col
#			 alter column = acol
#			 drop column = dcol
#
#	License: Same as Vim. http://www.vim.org/
###############################################################################

#select query.
snippet sel
	select $2.*
	from ${1:/*Tab*/} ${2:/*Alias*/}
	where ${3:0=0}

#create table.
snippet tab
	create table dbo.${1:/*Tab*/} (
		ID bigint identity(1,1) not null,
		${2:/*cols*/}

		CONSTRAINT PK_$1 primary key clustered (ID asc)
	);
	GO${3}

#drop table
snippet dtab
	drop table ${1:/*Tab*/};${2}

#truncate table. t as in (t)runcate
snippet ttab
	truncate table ${1:/*Tab*/};${2}

#add column, when inside a create-table statement. Default value is left out
snippet coll
	${1:/*Col*/} ${2:/*Type*/} not null,${3}

#add column
snippet col
	alter table ${1:/*Tab*/} add ${2:/*Col*/} ${3:/*Type*/} not null default(${4:/*DefVal*/});${5}

#alter column
snippet acol
	alter table ${1:/*Tab*/} alter column ${2:/*Col*/} ${3:/*Type*/} not null default(${4:/*DefVal*/});${5}

#drop column
snippet dcol
	alter table ${1:/*Tab*/} drop column ${2:/*Col*/};${3}

#create index
snippet ind
	create index IX_$1_$2 on ${1:/*Tab*/}(${2:/*Col*/});${3}

#drop index
snippet dind
	drop index IX_$1_${2} on ${1:/*Tab*/};${3}

#foreign key
snippet fk
	alter table ${1:/*FKtab*/} with check add constraint FK_$1_$3
		foreign key(${2:/*FKcol*/}) references ${3:/*UKtab*/}(${4:/*UKcol*/});
	GO
	alter table $1 check constraint FK_$1_$3;
	GO${5}

#drop foreign key
snippet dfk
	alter table ${1:/*FKtab*/} drop FK_$1_${2:/*UKtab*/};${3}

#stored proc
snippet sp
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO

	create procedure dbo.${1:/*ProcName*/} (
		@${2:/*param1Name*/} ${3:/*type*/},
	)
	as

	${4:/*body*/}
	GO${5}

#drop stored proc
snippet dsp
	drop procedure ${1:/*ProcName*/};
	GO${2}

#alter proc is left out so you don't accidentally erase your proc.

#function
snippet fn
	SET ANSI_NULLS ON
	GO
	SET QUOTED_IDENTIFIER ON
	GO

	create function dbo.${1:/*FuncName*/} (
		@${3:/*param1Name*/} ${4:/*type*/},${5}
	)
	RETURNS ${2:/*ReturnType*/} 
	as

	/*body*/
	return /*val*/;
	GO

#drop function
snippet dfn
	drop function ${1:/*FuncName*/};${2}

#view
snippet vw
	create view dbo.${1:/*ViewName*/}
	as

	${2:/*query*/}
	GO

#drop view
snippet dvw
	drop view ${1:/*ViewName*/};${2}

#trigger
snippet tr
	create trigger ${1:/*TrigName*/} on dbo.${2:/*Tab*/} for ${3:/*insert, update, delete*/}
	as
	${4:/*body*/}
	GO

#trigger (experimental, doesn't work if on multiple actions)
snippet trr
	create trigger tr_$1_$2 on dbo.${1:/*Tab*/} for ${2:/*insert, update, delete*/}
	as
	${3:/*body*/}
	GO
	

#drop trigger
snippet dtr
	drop trigger ${1:/*Trig*/};${2}
